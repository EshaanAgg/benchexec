// This file is part of BenchExec, a framework for reliable benchmarking:
// https://github.com/sosy-lab/benchexec
//
// SPDX-FileCopyrightText: 2019-2020 Dirk Beyer <https://www.sosy-lab.org>
//
// SPDX-License-Identifier: Apache-2.0

import React from "react";
import StatisticsTable from "./StatisticsTable";

const infos = [
  "displayName",
  "tool",
  "limit",
  "host",
  "os",
  "system",
  "date",
  "runset",
  "branch",
  "options",
  "property",
];

/**
 * JSX component for rendering the options of a tool.
 * @prop {string} text - The string containing the options.
 * @returns {JSX.Element}
 */
const ToolOptions = ({ text }) => {
  return text.split(/[\s]+-/).map((option, i) => (
    <li key={option}>
      <code>{i === 0 ? option : `-${option}`}</code>
    </li>
  ));
};

/**
 * JSX component for rendering an external link.
 * @prop {string} text - The string to display for the link.
 * @prop {string} url - The URL to link to.
 * @returns {JSX.Element}
 */
const ExternalLink = ({ url, text }) => {
  if (url) {
    return (
      <a href={url} target="_blank" rel="noopener noreferrer">
        {text}
      </a>
    );
  }

  return <>{text}</>;
};

/**
 * JSX component for rendering the name and version of a tool.
 * @prop {string} tool - The name of the tool.
 * @prop {string} version - The version of the tool.
 * @prop {string} project_url - The URL of the project.
 * @prop {string} version_url - The URL of the version.
 * @returns {JSX.Element}
 */
const ToolNameAndVersion = ({ tool, version, project_url, version_url }) => {
  return (
    <>
      <ExternalLink url={project_url} text={tool} />{" "}
      <ExternalLink url={version_url} text={version} />
    </>
  );
};

/**
 * JSX component for rendering the benchmark setup row.
 * @prop {string} row - The row type.
 * @prop {string|Array} data - The data to display.
 * @prop {number} colSpan - The column span of the cell.
 * @prop {number} index - The index of the cell.
 * @returns {JSX.Element}
 */
export const BenchmarkSetupRow = ({ row, data, colSpan, index }) => {
  const isOptionRow = row === "options";
  const isToolRow = row === "tool";

  return (
    <td
      colSpan={colSpan}
      key={data + index}
      className={`header__tool-row${isOptionRow && " options"}`}
    >
      {isOptionRow ? (
        <ul>
          <ToolOptions text={data} />
        </ul>
      ) : isToolRow ? (
        <ToolNameAndVersion {...data} />
      ) : (
        data
      )}
    </td>
  );
};

const Summary = (props) => {
  const benchmarkSetupData = infos
    .map((row) => props.tableHeader[row])
    .filter((row) => row !== null);

  return (
    <div id="summary">
      {/* <div id="benchmark_setup">
        <h2>Benchmark Setup</h2>
        <table>
          <tbody>
            {benchmarkSetupData.map((row) => (
              <tr key={"tr-" + row.id} className={row.id}>
                <th key={"td-" + row.id}>{row.name}</th>
                {row.content.map((tool, j) => (
                  <BenchmarkSetupRow
                    key={"td-" + row.id + "-" + j}
                    row={row.id}
                    data={tool[0]}
                    colSpan={tool[1]}
                    index={j}
                  />
                ))}
              </tr>
            ))}
          </tbody>
        </table>
      </div> */}

      <StatisticsTable
        selectColumn={props.selectColumn}
        tools={props.tools}
        switchToQuantile={props.switchToQuantile}
        hiddenCols={props.hiddenCols}
        tableData={props.tableData}
        onStatsReady={props.onStatsReady}
        stats={props.stats}
        filtered={props.filtered}
        benchmarkSetupData={benchmarkSetupData}
      />
      <p>
        Generated by {""}
        <a
          className="link"
          href="https://github.com/sosy-lab/benchexec"
          target="_blank"
          rel="noopener noreferrer"
        >
          BenchExec {props.version}
        </a>
      </p>
    </div>
  );
};

export default Summary;
